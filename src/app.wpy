<style lang="scss">
 @import "./font/iconfont.less";
 @import "./font/main.scss";
 [class*="-wrap"] {
  font-size: 28rpx;
 }
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  font-size: 24rpx;
  margin-bottom: 100rpx;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)
// 'pages/information/index' 'pages/newsflash/index'
export default class extends wepy.app {
  config = {
    pages: [
      'pages/bill',
      'pages/bill/add',
      'pages/information/newFlash',
      'pages/information/information',
      'pages/information/member',
      'pages/me/about'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#138cff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'white',
      backgroundColor: '#138cff'
    },
    tabBar: {
      color: '#757982',
      selectedColor: '#138cff',
      backgroundColor: '#fff',
      borderStyle: '#e8e8e8',
      list: [
        {
          'pagePath': 'pages/information/newFlash',
          'text': '快讯',
          'iconPath': 'images/message.png',
          'selectedIconPath': 'images/message_active.png'
        },
        {
          'pagePath': 'pages/bill',
          'text': '账本',
          'iconPath': 'images/tabbar/bill.png',
          'selectedIconPath': 'images/tabbar/bill-on.png'
        },
        {
          'pagePath': 'pages/information/information',
          'text': '资讯',
          'iconPath': 'images/contact.png',
          'selectedIconPath': 'images/contact_active.png'
        },
        {
          'pagePath': 'pages/information/member',
          'text': '会员中心',
          'iconPath': 'images/me.png',
          'selectedIconPath': 'images/me_active.png'
        }
      ]
    }
  }
  // 全局的数据对象
  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  // onLaunch() {
  //   this.testAsync()
  // }

  // sleep (s) {
  //   return new Promise((resolve, reject) => {
  //     setTimeout(() => {
  //       resolve('promise resolved')
  //     }, s * 1000)
  //   })
  // }

  // async testAsync () {
  //   const data = await this.sleep(3)
  //   console.log(data)
  // }

  // 13661864496
  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      lang: 'zh_CN',
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }

  // 统一跳转
  goUrl(url) {
    wx.navigateTo({url})
  }
  // global toast
  showGlobalToast(msg) {
    wx.showToast({
      title: msg,
      icon: 'none'
    })
  }
}
</script>
