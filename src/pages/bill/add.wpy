<style lang="scss">
  @import "../../font/main.scss";
  $radius: 6rpx;
  .account-wrap {
    .typebar {
      display: flex;
      width: 50%;
      margin: 0 auto;
      padding: 30rpx 0;
      text-align: center;
      .active {
        background-color: $color;
        color: #fff;
      }
      view {
        width: 50%;
        height: 60rpx;
        line-height: 60rpx;
        border: 2rpx solid $color;
        color: $color;
      }
      .firstChild {
        border-bottom-left-radius: $radius;
        border-top-left-radius: $radius;
      }
      .secondChild {
        border-bottom-right-radius: $radius;
        border-top-right-radius: $radius;
      }
    }
    .account-form {
      padding: 0 40rpx;
      .line {
        border-bottom: 2rpx solid #e8e8e8;
      }
      input {
        height: 100rpx;
        line-height: 100rpx;
      }
      .money {
        position: relative;
        .money-icon {
          position: absolute;
          top: 25rpx;
          font-size: 36rpx;
        }
        .moneyNum {
          padding-left: 40rpx;
        }
      }
      .btnGroup {
        display: flex;
        padding-top: 40rpx;
        view {
          height: 60rpx;
          line-height: 60rpx;
          width: 150rpx;
          text-align: center;
          border-radius: 6rpx;
        }
        .btnOk {
          background-color: $color;
          color: #fff;
        }
        .btnCancel {
          margin-left: 40rpx;
          background-color: #f8f8f8;
        }
      }
    }

    .account-cate {
      margin-top: 40rpx;
      padding: 30rpx;
      border-top: 4rpx solid $color;
    }
  }
</style>
<template>
  <view class="account-wrap">
    <view class="typebar">
      <view class="{{bill.typeId === '1' ? 'active' : ''}} firstChild" @tap="toggleType(1)">
        <text>支出</text>
      </view>
      <view class="{{bill.typeId === '2' ? 'active' : ''}} secondChild" @tap="toggleType(2)">
        <text>收入</text>
      </view>
    </view>

    <view class="account-form">
      <view class="money">
        <view class="money-icon">￥</view>
        <input @blur="bindBlurMoney" class="line moneyNum" type="digit"
               placeholder="请输入金额" value="{{bill.typeId === '1' ? form.money : form.getmoney}}"/>
      </view>
      <view class="remark">
        <input class="line" type="text" placeholder="请输入备注信息"/>
      </view>
      <view class="btnGroup">
        <view @tap="onAdd" class="btnOk"><text>确定</text></view>
        <view @tap="onCancel" class="btnCancel"><text>取消</text></view>
      </view>
    </view>

    <view class="account-cate">
      <cartsList :lists.sync="cateList" @selectedCate.use="getCate"></cartsList>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import CartsList from '@/components/bill/catesList'
  // incomeCateList
  import { payCateList } from '@/utils/catesConfig'
  import { isNumber, formatTime } from '@/utils/index'
  export default class BillAdd extends wepy.page {
    config = {
      navigationBarTitleText: '记账'
    }
    components = {
      cartsList: CartsList
    }
    data = {
      mount: '',
      bill: {
        typeId: '1'
      },
      form: {
        cateType: '',
        cateId: '',
        money: null,
        getmoney: null,
        remark: '',
        getDate: '',
        title: ''
      },
      cateList: payCateList
    }
    methods = {
      onAdd() { // 确认记账
        if (!parseFloat(this.mount) || !isNumber(this.mount)) {
          this.methods.showTitle.call(this, '请输入正确的金额')
          return false
        }
        if (!this.form.cateType) {
          this.methods.showTitle.call(this, '不要忘记消费类别')
          return false
        }
        if (this.bill.typeId === '1') {
          this.form.money = parseFloat(this.mount)
        }
        if (this.bill.typeId === '2') {
          this.form.getmoney = parseFloat(this.mount)
        }
        this.form.getDate = formatTime(new Date()).slice(0, 3)
        let self = this
        try {
          const res = wx.getStorageSync('payList')
          if (res) {
            res.push(this.form)
            wx.setStorage({
              key: 'payList',
              data: res
            })
          } else {
            wx.setStorage({
              key: 'payList',
              data: self.form
            })
            this.methods.showTitle('已保存这笔啦')
          }
        } catch (e) {
          this.methods.showTitle.call(this, '程序出错啦')
        }
      },
      onCancel() {

      },
      bindBlurMoney(e) {
        const val = this.mount = e.detail.value.trim()
        if (this.bill.typeId === '1') {
          this.form.money = val
        }
        if (this.bill.typeId === '2') {
          this.form.getmoney = val
        }
      },
      toggleType(val) {
        if (val === '1') {
          this.bill.typeId = val
        } else {
          this.bill.typeId = val
        }
        console.log(val)
      },
      showTitle(msg) {
        this.$parent.showGlobalToast(msg)
      }
    }
  }
</script>
